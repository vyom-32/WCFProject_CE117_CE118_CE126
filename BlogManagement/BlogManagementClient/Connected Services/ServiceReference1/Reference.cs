//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogManagementClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Blog", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
    [System.SerializableAttribute()]
    public partial class Blog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfUploadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfUpload {
            get {
                return this.DateOfUploadField;
            }
            set {
                if ((this.DateOfUploadField.Equals(value) != true)) {
                    this.DateOfUploadField = value;
                    this.RaisePropertyChanged("DateOfUpload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
    [System.SerializableAttribute()]
    public partial class MyException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        BlogManagementClient.ServiceReference1.CompositeType GetDataUsingDataContract(BlogManagementClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(BlogManagementClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBlog", ReplyAction="http://tempuri.org/IService1/AddBlogResponse")]
        bool AddBlog(BlogManagementClient.ServiceReference1.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBlog", ReplyAction="http://tempuri.org/IService1/AddBlogResponse")]
        System.Threading.Tasks.Task<bool> AddBlogAsync(BlogManagementClient.ServiceReference1.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBlog", ReplyAction="http://tempuri.org/IService1/UpdateBlogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogManagementClient.ServiceReference1.MyException), Action="http://tempuri.org/IService1/UpdateBlogMyExceptionFault", Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
        BlogManagementClient.ServiceReference1.Blog UpdateBlog(BlogManagementClient.ServiceReference1.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBlog", ReplyAction="http://tempuri.org/IService1/UpdateBlogResponse")]
        System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.Blog> UpdateBlogAsync(BlogManagementClient.ServiceReference1.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBlog", ReplyAction="http://tempuri.org/IService1/DeleteBlogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogManagementClient.ServiceReference1.MyException), Action="http://tempuri.org/IService1/DeleteBlogMyExceptionFault", Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
        bool DeleteBlog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBlog", ReplyAction="http://tempuri.org/IService1/DeleteBlogResponse")]
        System.Threading.Tasks.Task<bool> DeleteBlogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBlog", ReplyAction="http://tempuri.org/IService1/GetBlogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogManagementClient.ServiceReference1.MyException), Action="http://tempuri.org/IService1/GetBlogMyExceptionFault", Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/BlogManagement")]
        BlogManagementClient.ServiceReference1.Blog GetBlog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBlog", ReplyAction="http://tempuri.org/IService1/GetBlogResponse")]
        System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.Blog> GetBlogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBlog", ReplyAction="http://tempuri.org/IService1/GetAllBlogResponse")]
        System.Data.DataSet GetAllBlog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBlog", ReplyAction="http://tempuri.org/IService1/GetAllBlogResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllBlogAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BlogManagementClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BlogManagementClient.ServiceReference1.IService1>, BlogManagementClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public BlogManagementClient.ServiceReference1.CompositeType GetDataUsingDataContract(BlogManagementClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(BlogManagementClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AddBlog(BlogManagementClient.ServiceReference1.Blog b) {
            return base.Channel.AddBlog(b);
        }
        
        public System.Threading.Tasks.Task<bool> AddBlogAsync(BlogManagementClient.ServiceReference1.Blog b) {
            return base.Channel.AddBlogAsync(b);
        }
        
        public BlogManagementClient.ServiceReference1.Blog UpdateBlog(BlogManagementClient.ServiceReference1.Blog b) {
            return base.Channel.UpdateBlog(b);
        }
        
        public System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.Blog> UpdateBlogAsync(BlogManagementClient.ServiceReference1.Blog b) {
            return base.Channel.UpdateBlogAsync(b);
        }
        
        public bool DeleteBlog(int id) {
            return base.Channel.DeleteBlog(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBlogAsync(int id) {
            return base.Channel.DeleteBlogAsync(id);
        }
        
        public BlogManagementClient.ServiceReference1.Blog GetBlog(int id) {
            return base.Channel.GetBlog(id);
        }
        
        public System.Threading.Tasks.Task<BlogManagementClient.ServiceReference1.Blog> GetBlogAsync(int id) {
            return base.Channel.GetBlogAsync(id);
        }
        
        public System.Data.DataSet GetAllBlog() {
            return base.Channel.GetAllBlog();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllBlogAsync() {
            return base.Channel.GetAllBlogAsync();
        }
    }
}
